language: go

# Golang version matrix
go:
- 1.5.1

env:
 global:
  # Repository token for code coverage reports. Can be regenerated is nesesary.
  # Token is defined per github repository, generated by coveralls.io
  # If using travis to build fork,
  - COVERALLS_TOKEN=LkVhvJ6mYcW7mv8kosVqDZF5TXoPNIh8T

before_install:
# Install code coverage / coveralls tooling
- go get -u github.com/axw/gocov/gocov
- go get -u github.com/mattn/goveralls
- go get -u golang.org/x/tools/cmd/cover

# Install godep for dependency management
- go get -u github.com/tools/godep

# Merge all subpackage code coverage reports into a single report
- go get -u github.com/modocache/gover

before_script:
# Print build info that binary is compiled with.
- echo $TRAVIS_COMMIT
- echo $TRAVIS_TAG
- echo $TRAVIS_BRANCH
- echo $TRAVIS_BUILD_NUMBER

# Test if code was formatted with 'go fmt'
# Command will format code and return modified files
# fail if any have been modified.
- if [ -n "$(go fmt)" ]; then echo 'Code is not formatted with "go fmt"'; false; fi

# Perform static code analysys
- go vet ./...

script:
# go list supply import paths for all sub directories.
# Exclude Godeps directory, we don't want to run tests and coverage for all dependencies every time,
# also including their coverage may introduce to much noice. Concentrate on the coverage of local packages.
# Execute go test on every local subpackage (resolved as dependencies) and generate covreage report for each.
# Test packages pararell (xargs -P)
- go list ./... | grep -v Godeps | xargs -n1 -I {} -P 4 go test -v -covermode=count -coverprofile=../../../{}/profile.coverprofile {}

# Merge all coverage reports located in subdirectories and put them under: gover.coverprofile
- gover

# Send code coverage report to coveralls.io
# Requires COVERALLS_TOKEN environment variable set.
- goveralls -service=travis-pro -coverprofile=gover.coverprofile

# Insert build information into compiled binary using ldflags
- go build -ldflags "-X main.Commit=`echo $TRAVIS_COMMIT` -X main.Tag=`echo $TRAVIS_TAG` -X main.Branch=`echo $TRAVIS_BRANCH` -X main.BuildNumber=`echo $TRAVIS_BUILD_NUMBER`"

after_success:
# Make build client directory and copy all artifacts to this directory.
- mkdir build
- cp client build/

deploy:
# In case tag is set. Deploy build as github release.
- provider: releases
  api_key:
   secure: Zl8A5kcNB3qNBvJKn2TpOCXSTCPh0w0XxcpLtxmzYwpR2wn3SUyHzS6Ij2mtm1m6PR3s9TvhBEtmeFxmW0Q6NWCbOGuESJlUvBppWTVFzhDhE5eqTN//ZYTgEIfQaSUStiYbhN8aybN+s/KTCJWddYxeytZRwhEKFhIYSeHvx7xCqeqPZg31bV0k80oa3WAsGvNRST2EREjcptfPH3RSm+gUVJX8QGsFtxqaGJfBIIHJwItdbAQ7hmN2GNiXQzNmni5t85BDq5sOVTRPp8n4zHrl1jU54ll6sWh/5klwyD9OZRl/L9ZpGdnOzPECybZZl8+tLsiN48aG1WvtU53GcAOpcH21lJW8cQLLEufPXEZz4gyr8QLNXnjE+8bDvD14b1u3oBjDAj9O9qt6woJAVXDWWS9jn3qQPU7hREbulMQWFyAq+75/laQC9KFoHa8fzU2ZW+m9Blb9YqUXjrQEqIfHTdyl/gbEUdXAOIfIjqymM3uBM8pf/NuTAnL7g9mPoU6hUvrU16tajeSP7dx5lvdgfiP1L8gqm4NcC+wpLFvsKqwIp5Bz+aInMO6owjFMOICVX0QEttPOb3XI/VN4ZjsE3Dm0it9qD9PmG3ulg3vgqg4bOBhI1mDr5yQqIXgpn66vJatZB/q9IVlEXbMZtL2Bg+HNIBsh/sn9CJknRCE=
  file: build/client
  skip_cleanup: true
  on:
   repo: mendersoftware/client
   tags: true
   all_branches: true

# Deploy tag builds to S3 in structure /release/tag/os_arch/
- provider: s3
  access_key_id: $1
   secure: AqJQI2AzSvgLp5VuZNoz6thFtTWquliCkIdrrJmRqPzQkqXO9ZUFq3vWY/pv/gDD55DRy0SKROQIxbR4/gH40K4cUH8D0HghMnIYvrJ+87b2kBEss7l+AelT5c4z7kskncqmvMeu4SeDaTffo4irdkZjJ3vpRZ7vu2vRmNvM8EhvQgalB2IiZtdSQjnlF2uuuT+ZLYHcGPuyvhLHxBZ5dTSqFuVkeNznqTcsRAzaS/9OLcZNVZTs4niHNNBNG/81t9inzLhOVASODpLPRDDDmoAjBbNvrQc7bozwDfK1efINCbW0D2iu8qg+EtVCaPWNxv1uOe2rpsvvLgF2Mpi6Bg63CwWxx117mU21dCiuoGUlzM9QmnFcOLpm/4ItauYhlFSz/ok6LoB2i3+gTnNnslpBGF1+tLHmFHLDpa0UoqgDXc0Fv3ebdkEqNj5YGZav3b/xGLAnZovcI9exJTi1819jOOo66vLE81T1IgW+D12+5b4kH1k30MhFNPdok5fmgyQSuumDYXmjcF+2YXogVsNiW/3MZCQdZlT4QugZtbNSBrt3t65D5x6zYJPAvnlKbmx84F49jPM/JkWCbfJi6AiTMII3Ju9hHdRxmJHrKwXxpi6m7OUXQgeJbVVLWA/HDNk+9CCTgnAIZ20PNQDtdFChGxcuzTlKwrwa/X5+Ajo=
  secret_access_key: $2
   secure: CwT2smqMSIH5M/mZynfcgq432NzB2F/cczYyTQxbq7iWkexdLUWfbpD5uy7TFXKIxBmx1lC3kbkznC/vWjynHLIterilN+9hYQetuunamleRAzMYymusgVihnIqX52f3NYcx05IZVrgJev3Kfje5vqkcbU6cWUThYN4CUpHJEhdCJ9uvsVwg+uPMBkrtmlEw6Ja8L2Wwo3CS+kaFhzz6hFr+X02fx1Eq0Ebo1FvsaUBi06afoTGnpXxw+8S6c89ThiF727W1QPts5GLNLL22q1CE43KbKVsN3qjW6k3HJ3SaHaM1cq74taXmkGmx9XMZ/NS81KT97ZW8CHpJ/mrymAx447iEcOJTVxP2keVpciQhCeRvTa56SWRhkEOa3Iawd/lX95BQUYmF90dLG/3bkOp6+cPSZST7/r4wsvmIs3tigkfBKgiWYqvQe8cpJbyuCE/NOPGBmJl9hAtW6EHtYofy1i2wherf80+uf2Os2QH8JKVw3DI4XT0/JneuZyrgFze2PipWTFic9R+643ECavO8Ld87B3unqmYL0/ee9mXSUkfMI8q6xZcoq6ZajmDFtB4dzcMxGPLGyxpNprqoy+AwzWWDdZRuN9YQ9hSyZFmJRyzX6lNm+d6Aj8vaC++IfBpCQATx9q8rcuYrBSugYjiyZZGUFn5dFCZgibEF+/w=
  bucket: mender-buildsystem
  region: eu-west-1
  upload-dir: services/client/release/$TRAVIS_TAG/`go env GOOS`_`go env GOARCH`
  local_dir: build
  skip_cleanup: true
  on:
   repo: mendersoftware/client
   tags: true
   all_branches: true

# Deploy all development builds to S3 in structure /dev/branch/build/os_arch/
- provider: s3
  access_key_id:
  secret_access_key:
  bucket: mender-buildsystem
  region: eu-west-1
  upload-dir: services/client/dev/$TRAVIS_BRANCH/$TRAVIS_BUILD_NUMBER/`go env GOOS`_`go env GOARCH`
  local_dir: build
  skip_cleanup: true
  on:
   repo: mendersoftware/client
   tags: false
   all_branches: true

# Deploy all builds to S3 as latest folder /latest/branch/os_arch
- provider: s3
  access_key_id:
  secret_access_key:
  bucket: mender-buildsystem
  region: eu-west-1
  upload-dir: services/client/latest/$TRAVIS_BRANCH/`go env GOOS`_`go env GOARCH`
  local_dir: build
  skip_cleanup: true
  on:
   repo: mendersoftware/client
